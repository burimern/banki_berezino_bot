import json
import os
from aiogram import Router, types
from aiogram.enums import ContentType
from aiogram.filters import CommandStart
from .keyboards import get_main_menu

router = Router()

# –ü–†–ê–í–ò–õ–¨–ù–û: –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ –µ–µ –ò–ú–ï–ù–ò
WEBAPP_URL = os.getenv("WEBAPP_URL") 

@router.message(CommandStart())
async def send_welcome(message: types.Message):
    # –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ø–∞–¥–∞–ª, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    if not WEBAPP_URL:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ URL).")
        return # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥.",
        reply_markup=get_main_menu(WEBAPP_URL)
    )

@router.message(lambda message: message.content_type == ContentType.WEB_APP_DATA)
async def handle_web_app_data(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        order_details = "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"
        for item in data.get('items', []):
            order_details += f"- {item.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} (x{item.get('quantity', 1)})\n"
        order_details += f"\n–ò—Ç–æ–≥–æ: {data.get('total_price', 0)} —Ä—É–±."
        await message.answer(order_details)
    except Exception as e:
        await message.answer(f"‚ùóÔ∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
