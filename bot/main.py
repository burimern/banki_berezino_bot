import json
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ContentType
from aiogram.filters import CommandStart
from .keyboards import get_main_menu

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
import os
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def send_welcome(message: types.Message):
    """
    –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    """
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –∂–∏–¥–∫–æ—Å—Ç–µ–π –¥–ª—è –≤–µ–π–ø–æ–≤!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥.",
        reply_markup=get_main_menu(WEBAPP_URL)
    )

@dp.message(lambda message: message.content_type == ContentType.WEB_APP_DATA)
async def handle_web_app_data(message: types.Message):
    """
    –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ Web App
    """
    try:
        data = json.loads(message.web_app_data.data)
        # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {'items': [{'id': 1, 'title': '...'}], 'total_price': 1500}
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        order_details = "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"
        for item in data.get('items', []):
            order_details += f"- {item.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} (x{item.get('quantity', 1)})\n"
        order_details += f"\n–ò—Ç–æ–≥–æ: {data.get('total_price', 0)} —Ä—É–±."

        await message.answer(order_details)

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –ë–î,
        # –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ —Ç.–¥.
        # await notify_admin(data)
        
    except json.JSONDecodeError:
        await message.answer("‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞.")
    except Exception as e:
        await message.answer(f"‚ùóÔ∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: {e}")
